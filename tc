#define TIM1_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM1_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM1_EGR (    \
  0 * TIM_EGR_UG      |  /* (1 << 0)    Update Generation                             0x00000001  */\
  0 * TIM_EGR_CC1G    |  /* (1 << 1)    Capture/Compare 1 Generation                  0x00000002  */\
  0 * TIM_EGR_CC2G    |  /* (1 << 2)    Capture/Compare 2 Generation                  0x00000004  */\
  0 * TIM_EGR_CC3G    |  /* (1 << 3)    Capture/Compare 3 Generation                  0x00000008  */\
  0 * TIM_EGR_CC4G    |  /* (1 << 4)    Capture/Compare 4 Generation                  0x00000010  */\
  0 * TIM_EGR_COMG    |  /* (1 << 5)    Capture/Compare Control Update Generation     0x00000020  */\
  0 * TIM_EGR_TG      |  /* (1 << 6)    Trigger Generation                            0x00000040  */\
  0 * TIM_EGR_BG         /* (1 << 7)    Break Generation                              0x00000080  */\
)

#define TIM1_CR1 (  \
  0 * TIM_CR1_CEN   |  /* (1 << 0)  Counter enable                                0x00000001  */\
  0 * TIM_CR1_UDIS  |  /* (1 << 1)  Update disable                                0x00000002  */\
  0 * TIM_CR1_URS   |  /* (1 << 2)  Update request source                         0x00000004  */\
  0 * TIM_CR1_OPM   |  /* (1 << 3)  One pulse mode                                0x00000008  */\
  0 * TIM_CR1_DIR   |  /* (1 << 4)  Direction                                     0x00000010  */\
  0 * TIM_CR1_CMS   |  /* (3 << 5)  CMS[1:0] bits (Center-aligned mode selection) 0x00000060  */\
  0 * TIM_CR1_CMS_0 |  /* (1 << 5)    0x00000020                                              */\
  0 * TIM_CR1_CMS_1 |  /* (2 << 5)    0x00000040                                              */\
  0 * TIM_CR1_ARPE  |  /* (1 << 7)  Auto-reload preload enable                    0x00000080  */\
  0 * TIM_CR1_CKD   |  /* (3 << 8)  CKD[1:0] bits (clock division)                0x00000300  */\
  0 * TIM_CR1_CKD_0 |  /* (1 << 8)    0x00000100                                              */\
  0 * TIM_CR1_CKD_1    /* (2 << 8)    0x00000200                                              */\
)

#define TIM1_CR2 (  \
  0 * TIM_CR2_CCPC  |  /* (1 << 0)   Capture/Compare Preloaded Control             0x00000001  */\
  0 * TIM_CR2_CCUS  |  /* (1 << 2)   Capture/Compare Control Update Selection      0x00000004  */\
  0 * TIM_CR2_CCDS  |  /* (1 << 3)   Capture/Compare DMA Selection                 0x00000008  */\
  0 * TIM_CR2_MMS   |  /* (7 << 4)   MMS[2:0] bits (Master Mode Selection)         0x00000070  */\
  0 * TIM_CR2_MMS_0 |  /* (1 << 4)     0x00000010                                              */\
  0 * TIM_CR2_MMS_1 |  /* (2 << 4)     0x00000020                                              */\
  0 * TIM_CR2_MMS_2 |  /* (4 << 4)     0x00000040                                              */\
  0 * TIM_CR2_TI1S  |  /* (1 << 7)   TI1 Selection                                 0x00000080  */\
  0 * TIM_CR2_OIS1  |  /* (1 << 8)   Output Idle state 1 (OC1 output)              0x00000100  */\
  0 * TIM_CR2_OIS1N |  /* (1 << 9)   Output Idle state 1 (OC1N output)             0x00000200  */\
  0 * TIM_CR2_OIS2  |  /* (1 << 10)  Output Idle state 2 (OC2 output)              0x00000400  */\
  0 * TIM_CR2_OIS2N |  /* (1 << 11)  Output Idle state 2 (OC2N output)             0x00000800  */\
  0 * TIM_CR2_OIS3  |  /* (1 << 12)  Output Idle state 3 (OC3 output)              0x00001000  */\
  0 * TIM_CR2_OIS3N |  /* (1 << 13)  Output Idle state 3 (OC3N output)             0x00002000  */\
  0 * TIM_CR2_OIS4     /* (1 << 14)  Output Idle state 4 (OC4 output)              0x00004000  */\
)

#define TIM1_DIER (   \
  0 * TIM_DIER_UIE    |  /* (1 << 0)    Update interrupt enable                       0x00000001  */\
  0 * TIM_DIER_CC1IE  |  /* (1 << 1)    Capture/Compare 1 interrupt enable            0x00000002  */\
  0 * TIM_DIER_CC2IE  |  /* (1 << 2)    Capture/Compare 2 interrupt enable            0x00000004  */\
  0 * TIM_DIER_CC3IE  |  /* (1 << 3)    Capture/Compare 3 interrupt enable            0x00000008  */\
  0 * TIM_DIER_CC4IE  |  /* (1 << 4)    Capture/Compare 4 interrupt enable            0x00000010  */\
  0 * TIM_DIER_COMIE  |  /* (1 << 5)    COM interrupt enable                          0x00000020  */\
  0 * TIM_DIER_TIE    |  /* (1 << 6)    Trigger interrupt enable                      0x00000040  */\
  0 * TIM_DIER_BIE    |  /* (1 << 7)    Break interrupt enable                        0x00000080  */\
  0 * TIM_DIER_UDE    |  /* (1 << 8)    Update DMA request enable                     0x00000100  */\
  0 * TIM_DIER_CC1DE  |  /* (1 << 9)    Capture/Compare 1 DMA request enable          0x00000200  */\
  0 * TIM_DIER_CC2DE  |  /* (1 << 10)   Capture/Compare 2 DMA request enable          0x00000400  */\
  0 * TIM_DIER_CC3DE  |  /* (1 << 11)   Capture/Compare 3 DMA request enable          0x00000800  */\
  0 * TIM_DIER_CC4DE  |  /* (1 << 12)   Capture/Compare 4 DMA request enable          0x00001000  */\
  0 * TIM_DIER_COMDE  |  /* (1 << 13)   COM DMA request enable                        0x00002000  */\
  0 * TIM_DIER_TDE       /* (1 << 14)   Trigger DMA request enable                    0x00004000  */\
)

#define TIM1_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM1_CCMR1 (     \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)     CC1S[1:0] bits (Capture/Compare 1 Selection)  0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)       0x00000001                                              */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)       0x00000002                                              */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)     Output Compare 1 Fast enable                  0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)     Output Compare 1 Preload enable               0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)     OC1M[2:0] bits (Output Compare 1 Mode)        0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)       0x00000010                                              */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)       0x00000020                                              */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)       0x00000040                                              */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)     Output Compare 1Clear Enable                  0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)     CC2S[1:0] bits (Capture/Compare 2 Selection)  0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)       0x00000100                                              */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)       0x00000200                                              */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)    Output Compare 2 Fast enable                  0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)    Output Compare 2 Preload enable               0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)    OC2M[2:0] bits (Output Compare 2 Mode)        0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)      0x00001000                                              */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)      0x00002000                                              */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)      0x00004000                                              */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)    Output Compare 2 Clear Enable                 0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)     IC1PSC[1:0] bits (Input Capture 1 Prescaler)  0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)       0x00000004                                              */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)       0x00000008                                              */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)   IC1F[3:0] bits (Input Capture 1 Filter)       0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)       0x00000010                                              */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)       0x00000020                                              */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)       0x00000040                                              */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)       0x00000080                                              */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)    IC2PSC[1:0] bits (Input Capture 2 Prescaler)  0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)      0x00000400                                              */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)      0x00000800                                              */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)  IC2F[3:0] bits (Input Capture 2 Filter)       0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)      0x00001000                                              */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)      0x00002000                                              */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)      0x00004000                                              */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)      0x00008000                                              */\
)

#define TIM1_CCMR2 (     \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)     CC3S[1:0] bits (Capture/Compare 3 Selection)  0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)       0x00000001                                              */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)       0x00000002                                              */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)     Output Compare 3 Fast enable                  0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)     Output Compare 3 Preload enable               0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)     OC3M[2:0] bits (Output Compare 3 Mode)        0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)       0x00000010                                              */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)       0x00000020                                              */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)       0x00000040                                              */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)     Output Compare 3 Clear Enable                 0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)     CC4S[1:0] bits (Capture/Compare 4 Selection)  0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)       0x00000100                                              */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)       0x00000200                                              */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)    Output Compare 4 Fast enable                  0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)    Output Compare 4 Preload enable               0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)    OC4M[2:0] bits (Output Compare 4 Mode)        0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)      0x00001000                                              */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)      0x00002000                                              */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)      0x00004000                                              */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)    Output Compare 4 Clear Enable                 0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)     IC3PSC[1:0] bits (Input Capture 3 Prescaler)  0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)       0x00000004                                              */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)       0x00000008                                              */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)   IC3F[3:0] bits (Input Capture 3 Filter)       0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)       0x00000010                                              */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)       0x00000020                                              */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)       0x00000040                                              */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)       0x00000080                                              */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)    IC4PSC[1:0] bits (Input Capture 4 Prescaler)  0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)      0x00000400                                              */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)      0x00000800                                              */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)  IC4F[3:0] bits (Input Capture 4 Filter)       0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)      0x00001000                                              */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)      0x00002000                                              */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)      0x00004000                                              */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)      0x00008000                                              */\
)

#define TIM1_CCER (      \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)     Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)     Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)     Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)     Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)     Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)     Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)     Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)     Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)     Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)     Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)    Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)    Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)    Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)    Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)    Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM1_SMCR (   \
  0 * TIM_SMCR_SMS    |  /* (7 << 0)    SMS[2:0] bits (Slave mode selection)          0x00000007  */\
  0 * TIM_SMCR_SMS_0  |  /* (1 << 0)      0x00000001                                              */\
  0 * TIM_SMCR_SMS_1  |  /* (2 << 0)      0x00000002                                              */\
  0 * TIM_SMCR_SMS_2  |  /* (4 << 0)      0x00000004                                              */\
  0 * TIM_SMCR_OCCS   |  /* (1 << 3)    OCREF clear selection                         0x00000008  */\
  0 * TIM_SMCR_TS     |  /* (7 << 4)    TS[2:0] bits (Trigger selection)              0x00000070  */\
  0 * TIM_SMCR_TS_0   |  /* (1 << 4)      0x00000010                                              */\
  0 * TIM_SMCR_TS_1   |  /* (2 << 4)      0x00000020                                              */\
  0 * TIM_SMCR_TS_2   |  /* (4 << 4)      0x00000040                                              */\
  0 * TIM_SMCR_MSM    |  /* (1 << 7)    Master/slave mode                             0x00000080  */\
  0 * TIM_SMCR_ETF    |  /* (0xF << 8)  ETF[3:0] bits (External trigger filter)       0x00000F00  */\
  0 * TIM_SMCR_ETF_0  |  /* (1 << 8)      0x00000100                                              */\
  0 * TIM_SMCR_ETF_1  |  /* (2 << 8)      0x00000200                                              */\
  0 * TIM_SMCR_ETF_2  |  /* (4 << 8)      0x00000400                                              */\
  0 * TIM_SMCR_ETF_3  |  /* (8 << 8)      0x00000800                                              */\
  0 * TIM_SMCR_ETPS   |  /* (3 << 12)   ETPS[1:0] bits (External trigger prescaler)   0x00003000  */\
  0 * TIM_SMCR_ETPS_0 |  /* (1 << 12)     0x00001000                                              */\
  0 * TIM_SMCR_ETPS_1 |  /* (2 << 12)     0x00002000                                              */\
  0 * TIM_SMCR_ECE    |  /* (1 << 14)   External clock enable                         0x00004000  */\
  0 * TIM_SMCR_ETP       /* (1 << 15)   External trigger polarity                     0x00008000  */\
)

#define TIM1_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM1_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM1_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM1_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM1_DCR (       \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM1_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM1_OR          0000

#define TIM1_BDTR (      \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM1_SR (     \
  0 * TIM_SR_UIF      |  /* (1 << 0)    Update interrupt Flag                         0x00000001  */\
  0 * TIM_SR_CC1IF    |  /* (1 << 1)    Capture/Compare 1 interrupt Flag              0x00000002  */\
  0 * TIM_SR_CC2IF    |  /* (1 << 2)    Capture/Compare 2 interrupt Flag              0x00000004  */\
  0 * TIM_SR_CC3IF    |  /* (1 << 3)    Capture/Compare 3 interrupt Flag              0x00000008  */\
  0 * TIM_SR_CC4IF    |  /* (1 << 4)    Capture/Compare 4 interrupt Flag              0x00000010  */\
  0 * TIM_SR_COMIF    |  /* (1 << 5)    COM interrupt Flag                            0x00000020  */\
  0 * TIM_SR_TIF      |  /* (1 << 6)    Trigger interrupt Flag                        0x00000040  */\
  0 * TIM_SR_BIF      |  /* (1 << 7)    Break interrupt Flag                          0x00000080  */\
  0 * TIM_SR_CC1OF    |  /* (1 << 9)    Capture/Compare 1 Overcapture Flag            0x00000200  */\
  0 * TIM_SR_CC2OF    |  /* (1 << 10)   Capture/Compare 2 Overcapture Flag            0x00000400  */\
  0 * TIM_SR_CC3OF    |  /* (1 << 11)   Capture/Compare 3 Overcapture Flag            0x00000800  */\
  0 * TIM_SR_CC4OF       /* (1 << 12)   Capture/Compare 4 Overcapture Flag            0x00001000  */\
)

#define TIM1_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM3_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM3_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM3_EGR (       \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM3_CR1 (       \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM3_CR2 (       \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM3_DIER (      \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM3_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM3_CCMR1 (     \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM3_CCMR2 (     \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM3_CCER (      \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM3_SMCR (      \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM3_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM3_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM3_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM3_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM3_DCR (       \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM3_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM3_OR          0000

#define TIM3_BDTR (      \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM3_SR (        \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM3_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM6_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM6_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM6_EGR (       \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM6_CR1 (       \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM6_CR2 (       \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM6_DIER (      \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM6_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM6_CCMR1 (     \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM6_CCMR2 (     \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM6_CCER (      \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM6_SMCR (      \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM6_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM6_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM6_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM6_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM6_DCR (       \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM6_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM6_OR          0000

#define TIM6_BDTR (      \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM6_SR (        \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM6_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM14_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM14_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM14_EGR (      \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM14_CR1 (      \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM14_CR2 (      \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM14_DIER (     \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM14_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM14_CCMR1 (    \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM14_CCMR2 (    \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM14_CCER (     \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM14_SMCR (     \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM14_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM14_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM14_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM14_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM14_DCR (      \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM14_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM14_OR         0000

#define TIM14_BDTR (     \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM14_SR (       \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM14_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM15_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM15_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM15_EGR (      \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM15_CR1 (      \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM15_CR2 (      \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM15_DIER (     \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM15_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM15_CCMR1 (    \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM15_CCMR2 (    \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM15_CCER (     \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM15_SMCR (     \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM15_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM15_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM15_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM15_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM15_DCR (      \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM15_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM15_OR         0000

#define TIM15_BDTR (     \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM15_SR (       \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM15_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM16_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM16_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM16_EGR (      \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM16_CR1 (      \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM16_CR2 (      \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM16_DIER (     \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM16_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM16_CCMR1 (    \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM16_CCMR2 (    \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM16_CCER (     \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM16_SMCR (     \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM16_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM16_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM16_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM16_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM16_DCR (      \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM16_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM16_OR         0000

#define TIM16_BDTR (     \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM16_SR (       \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM16_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

#define TIM17_PSC (\
  0 * TIM_PSC_PSC           /* (0xFFFF << 0)      Prescaler Value                                 0x0000FFFF  */\
)

#define TIM17_ARR (\
  0 * TIM_ARR_ARR           /* (0xFFFFFFFF << 0)  actual auto-reload Value                        0xFFFFFFFF  */\
)

#define TIM17_EGR (      \
  0 * TIM_EGR_UG         |  /* (1 << 0)           Update Generation                               0x00000001  */\
  0 * TIM_EGR_CC1G       |  /* (1 << 1)           Capture/Compare 1 Generation                    0x00000002  */\
  0 * TIM_EGR_CC2G       |  /* (1 << 2)           Capture/Compare 2 Generation                    0x00000004  */\
  0 * TIM_EGR_CC3G       |  /* (1 << 3)           Capture/Compare 3 Generation                    0x00000008  */\
  0 * TIM_EGR_CC4G       |  /* (1 << 4)           Capture/Compare 4 Generation                    0x00000010  */\
  0 * TIM_EGR_COMG       |  /* (1 << 5)           Capture/Compare Control Update Generation       0x00000020  */\
  0 * TIM_EGR_TG         |  /* (1 << 6)           Trigger Generation                              0x00000040  */\
  0 * TIM_EGR_BG            /* (1 << 7)           Break Generation                                0x00000080  */\
)

#define TIM17_CR1 (      \
  0 * TIM_CR1_CEN        |  /* (1 << 0)           Counter enable                                  0x00000001  */\
  0 * TIM_CR1_UDIS       |  /* (1 << 1)           Update disable                                  0x00000002  */\
  0 * TIM_CR1_URS        |  /* (1 << 2)           Update request source                           0x00000004  */\
  0 * TIM_CR1_OPM        |  /* (1 << 3)           One pulse mode                                  0x00000008  */\
  0 * TIM_CR1_DIR        |  /* (1 << 4)           Direction                                       0x00000010  */\
  0 * TIM_CR1_CMS        |  /* (3 << 5)           CMS[1:0] bits (Center-aligned mode selection)   0x00000060  */\
  0 * TIM_CR1_CMS_0      |  /* (1 << 5)             0x00000020                                                */\
  0 * TIM_CR1_CMS_1      |  /* (2 << 5)             0x00000040                                                */\
  0 * TIM_CR1_ARPE       |  /* (1 << 7)           Auto-reload preload enable                      0x00000080  */\
  0 * TIM_CR1_CKD        |  /* (3 << 8)           CKD[1:0] bits (clock division)                  0x00000300  */\
  0 * TIM_CR1_CKD_0      |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CR1_CKD_1         /* (2 << 8)             0x00000200                                                */\
)

#define TIM17_CR2 (      \
  0 * TIM_CR2_CCPC       |  /* (1 << 0)           Capture/Compare Preloaded Control               0x00000001  */\
  0 * TIM_CR2_CCUS       |  /* (1 << 2)           Capture/Compare Control Update Selection        0x00000004  */\
  0 * TIM_CR2_CCDS       |  /* (1 << 3)           Capture/Compare DMA Selection                   0x00000008  */\
  0 * TIM_CR2_MMS        |  /* (7 << 4)           MMS[2:0] bits (Master Mode Selection)           0x00000070  */\
  0 * TIM_CR2_MMS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CR2_MMS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CR2_MMS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CR2_TI1S       |  /* (1 << 7)           TI1 Selection                                   0x00000080  */\
  0 * TIM_CR2_OIS1       |  /* (1 << 8)           Output Idle state 1 (OC1 output)                0x00000100  */\
  0 * TIM_CR2_OIS1N      |  /* (1 << 9)           Output Idle state 1 (OC1N output)               0x00000200  */\
  0 * TIM_CR2_OIS2       |  /* (1 << 10)          Output Idle state 2 (OC2 output)                0x00000400  */\
  0 * TIM_CR2_OIS2N      |  /* (1 << 11)          Output Idle state 2 (OC2N output)               0x00000800  */\
  0 * TIM_CR2_OIS3       |  /* (1 << 12)          Output Idle state 3 (OC3 output)                0x00001000  */\
  0 * TIM_CR2_OIS3N      |  /* (1 << 13)          Output Idle state 3 (OC3N output)               0x00002000  */\
  0 * TIM_CR2_OIS4          /* (1 << 14)          Output Idle state 4 (OC4 output)                0x00004000  */\
)

#define TIM17_DIER (     \
  0 * TIM_DIER_UIE       |  /* (1 << 0)           Update interrupt enable                         0x00000001  */\
  0 * TIM_DIER_CC1IE     |  /* (1 << 1)           Capture/Compare 1 interrupt enable              0x00000002  */\
  0 * TIM_DIER_CC2IE     |  /* (1 << 2)           Capture/Compare 2 interrupt enable              0x00000004  */\
  0 * TIM_DIER_CC3IE     |  /* (1 << 3)           Capture/Compare 3 interrupt enable              0x00000008  */\
  0 * TIM_DIER_CC4IE     |  /* (1 << 4)           Capture/Compare 4 interrupt enable              0x00000010  */\
  0 * TIM_DIER_COMIE     |  /* (1 << 5)           COM interrupt enable                            0x00000020  */\
  0 * TIM_DIER_TIE       |  /* (1 << 6)           Trigger interrupt enable                        0x00000040  */\
  0 * TIM_DIER_BIE       |  /* (1 << 7)           Break interrupt enable                          0x00000080  */\
  0 * TIM_DIER_UDE       |  /* (1 << 8)           Update DMA request enable                       0x00000100  */\
  0 * TIM_DIER_CC1DE     |  /* (1 << 9)           Capture/Compare 1 DMA request enable            0x00000200  */\
  0 * TIM_DIER_CC2DE     |  /* (1 << 10)          Capture/Compare 2 DMA request enable            0x00000400  */\
  0 * TIM_DIER_CC3DE     |  /* (1 << 11)          Capture/Compare 3 DMA request enable            0x00000800  */\
  0 * TIM_DIER_CC4DE     |  /* (1 << 12)          Capture/Compare 4 DMA request enable            0x00001000  */\
  0 * TIM_DIER_COMDE     |  /* (1 << 13)          COM DMA request enable                          0x00002000  */\
  0 * TIM_DIER_TDE          /* (1 << 14)          Trigger DMA request enable                      0x00004000  */\
)

#define TIM17_RCR (\
  0 * TIM_RCR_REP           /* (0xFF << 0)        Repetition Counter Value                        0x000000FF  */\
)

#define TIM17_CCMR1 (    \
  0 * TIM_CCMR1_CC1S     |  /* (3 << 0)           CC1S[1:0] bits (Capture/Compare 1 Selection)    0x00000003  */\
  0 * TIM_CCMR1_CC1S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR1_CC1S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR1_OC1FE    |  /* (1 << 2)           Output Compare 1 Fast enable                    0x00000004  */\
  0 * TIM_CCMR1_OC1PE    |  /* (1 << 3)           Output Compare 1 Preload enable                 0x00000008  */\
  0 * TIM_CCMR1_OC1M     |  /* (7 << 4)           OC1M[2:0] bits (Output Compare 1 Mode)          0x00000070  */\
  0 * TIM_CCMR1_OC1M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_OC1M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_OC1M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_OC1CE    |  /* (1 << 7)           Output Compare 1Clear Enable                    0x00000080  */\
  0 * TIM_CCMR1_CC2S     |  /* (3 << 8)           CC2S[1:0] bits (Capture/Compare 2 Selection)    0x00000300  */\
  0 * TIM_CCMR1_CC2S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR1_CC2S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR1_OC2FE    |  /* (1 << 10)          Output Compare 2 Fast enable                    0x00000400  */\
  0 * TIM_CCMR1_OC2PE    |  /* (1 << 11)          Output Compare 2 Preload enable                 0x00000800  */\
  0 * TIM_CCMR1_OC2M     |  /* (7 << 12)          OC2M[2:0] bits (Output Compare 2 Mode)          0x00007000  */\
  0 * TIM_CCMR1_OC2M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_OC2M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_OC2M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_OC2CE    |  /* (1 << 15)          Output Compare 2 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR1_IC1PSC   |  /* (3 << 2)           IC1PSC[1:0] bits (Input Capture 1 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR1_IC1PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR1_IC1PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR1_IC1F     |  /* (0xF << 4)         IC1F[3:0] bits (Input Capture 1 Filter)         0x000000F0  */\
  0 * TIM_CCMR1_IC1F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR1_IC1F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR1_IC1F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR1_IC1F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR1_IC2PSC   |  /* (3 << 10)          IC2PSC[1:0] bits (Input Capture 2 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR1_IC2PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR1_IC2PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR1_IC2F     |  /* (0xF << 12)        IC2F[3:0] bits (Input Capture 2 Filter)         0x0000F000  */\
  0 * TIM_CCMR1_IC2F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR1_IC2F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR1_IC2F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR1_IC2F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM17_CCMR2 (    \
  0 * TIM_CCMR2_CC3S     |  /* (3 << 0)           CC3S[1:0] bits (Capture/Compare 3 Selection)    0x00000003  */\
  0 * TIM_CCMR2_CC3S_0   |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_CCMR2_CC3S_1   |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_CCMR2_OC3FE    |  /* (1 << 2)           Output Compare 3 Fast enable                    0x00000004  */\
  0 * TIM_CCMR2_OC3PE    |  /* (1 << 3)           Output Compare 3 Preload enable                 0x00000008  */\
  0 * TIM_CCMR2_OC3M     |  /* (7 << 4)           OC3M[2:0] bits (Output Compare 3 Mode)          0x00000070  */\
  0 * TIM_CCMR2_OC3M_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_OC3M_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_OC3M_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_OC3CE    |  /* (1 << 7)           Output Compare 3 Clear Enable                   0x00000080  */\
  0 * TIM_CCMR2_CC4S     |  /* (3 << 8)           CC4S[1:0] bits (Capture/Compare 4 Selection)    0x00000300  */\
  0 * TIM_CCMR2_CC4S_0   |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_CCMR2_CC4S_1   |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_CCMR2_OC4FE    |  /* (1 << 10)          Output Compare 4 Fast enable                    0x00000400  */\
  0 * TIM_CCMR2_OC4PE    |  /* (1 << 11)          Output Compare 4 Preload enable                 0x00000800  */\
  0 * TIM_CCMR2_OC4M     |  /* (7 << 12)          OC4M[2:0] bits (Output Compare 4 Mode)          0x00007000  */\
  0 * TIM_CCMR2_OC4M_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_OC4M_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_OC4M_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_OC4CE    |  /* (1 << 15)          Output Compare 4 Clear Enable                   0x00008000  */\
  0 * TIM_CCMR2_IC3PSC   |  /* (3 << 2)           IC3PSC[1:0] bits (Input Capture 3 Prescaler)    0x0000000C  */\
  0 * TIM_CCMR2_IC3PSC_0 |  /* (1 << 2)             0x00000004                                                */\
  0 * TIM_CCMR2_IC3PSC_1 |  /* (2 << 2)             0x00000008                                                */\
  0 * TIM_CCMR2_IC3F     |  /* (0xF << 4)         IC3F[3:0] bits (Input Capture 3 Filter)         0x000000F0  */\
  0 * TIM_CCMR2_IC3F_0   |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_CCMR2_IC3F_1   |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_CCMR2_IC3F_2   |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_CCMR2_IC3F_3   |  /* (8 << 4)             0x00000080                                                */\
  0 * TIM_CCMR2_IC4PSC   |  /* (3 << 10)          IC4PSC[1:0] bits (Input Capture 4 Prescaler)    0x00000C00  */\
  0 * TIM_CCMR2_IC4PSC_0 |  /* (1 << 10)            0x00000400                                                */\
  0 * TIM_CCMR2_IC4PSC_1 |  /* (2 << 10)            0x00000800                                                */\
  0 * TIM_CCMR2_IC4F     |  /* (0xF << 12)        IC4F[3:0] bits (Input Capture 4 Filter)         0x0000F000  */\
  0 * TIM_CCMR2_IC4F_0   |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_CCMR2_IC4F_1   |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_CCMR2_IC4F_2   |  /* (4 << 12)            0x00004000                                                */\
  0 * TIM_CCMR2_IC4F_3      /* (8 << 12)            0x00008000                                                */\
)

#define TIM17_CCER (     \
  0 * TIM_CCER_CC1E      |  /* (1 << 0)           Capture/Compare 1 output enable                 0x00000001  */\
  0 * TIM_CCER_CC1P      |  /* (1 << 1)           Capture/Compare 1 output Polarity               0x00000002  */\
  0 * TIM_CCER_CC1NE     |  /* (1 << 2)           Capture/Compare 1 Complementary output enable   0x00000004  */\
  0 * TIM_CCER_CC1NP     |  /* (1 << 3)           Capture/Compare 1 Complementary output Polarity 0x00000008  */\
  0 * TIM_CCER_CC2E      |  /* (1 << 4)           Capture/Compare 2 output enable                 0x00000010  */\
  0 * TIM_CCER_CC2P      |  /* (1 << 5)           Capture/Compare 2 output Polarity               0x00000020  */\
  0 * TIM_CCER_CC2NE     |  /* (1 << 6)           Capture/Compare 2 Complementary output enable   0x00000040  */\
  0 * TIM_CCER_CC2NP     |  /* (1 << 7)           Capture/Compare 2 Complementary output Polarity 0x00000080  */\
  0 * TIM_CCER_CC3E      |  /* (1 << 8)           Capture/Compare 3 output enable                 0x00000100  */\
  0 * TIM_CCER_CC3P      |  /* (1 << 9)           Capture/Compare 3 output Polarity               0x00000200  */\
  0 * TIM_CCER_CC3NE     |  /* (1 << 10)          Capture/Compare 3 Complementary output enable   0x00000400  */\
  0 * TIM_CCER_CC3NP     |  /* (1 << 11)          Capture/Compare 3 Complementary output Polarity 0x00000800  */\
  0 * TIM_CCER_CC4E      |  /* (1 << 12)          Capture/Compare 4 output enable                 0x00001000  */\
  0 * TIM_CCER_CC4P      |  /* (1 << 13)          Capture/Compare 4 output Polarity               0x00002000  */\
  0 * TIM_CCER_CC4NP        /* (1 << 15)          Capture/Compare 4 Complementary output Polarity 0x00008000  */\
)

#define TIM17_SMCR (     \
  0 * TIM_SMCR_SMS       |  /* (7 << 0)           SMS[2:0] bits (Slave mode selection)            0x00000007  */\
  0 * TIM_SMCR_SMS_0     |  /* (1 << 0)             0x00000001                                                */\
  0 * TIM_SMCR_SMS_1     |  /* (2 << 0)             0x00000002                                                */\
  0 * TIM_SMCR_SMS_2     |  /* (4 << 0)             0x00000004                                                */\
  0 * TIM_SMCR_OCCS      |  /* (1 << 3)           OCREF clear selection                           0x00000008  */\
  0 * TIM_SMCR_TS        |  /* (7 << 4)           TS[2:0] bits (Trigger selection)                0x00000070  */\
  0 * TIM_SMCR_TS_0      |  /* (1 << 4)             0x00000010                                                */\
  0 * TIM_SMCR_TS_1      |  /* (2 << 4)             0x00000020                                                */\
  0 * TIM_SMCR_TS_2      |  /* (4 << 4)             0x00000040                                                */\
  0 * TIM_SMCR_MSM       |  /* (1 << 7)           Master/slave mode                               0x00000080  */\
  0 * TIM_SMCR_ETF       |  /* (0xF << 8)         ETF[3:0] bits (External trigger filter)         0x00000F00  */\
  0 * TIM_SMCR_ETF_0     |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_SMCR_ETF_1     |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_SMCR_ETF_2     |  /* (4 << 8)             0x00000400                                                */\
  0 * TIM_SMCR_ETF_3     |  /* (8 << 8)             0x00000800                                                */\
  0 * TIM_SMCR_ETPS      |  /* (3 << 12)          ETPS[1:0] bits (External trigger prescaler)     0x00003000  */\
  0 * TIM_SMCR_ETPS_0    |  /* (1 << 12)            0x00001000                                                */\
  0 * TIM_SMCR_ETPS_1    |  /* (2 << 12)            0x00002000                                                */\
  0 * TIM_SMCR_ECE       |  /* (1 << 14)          External clock enable                           0x00004000  */\
  0 * TIM_SMCR_ETP          /* (1 << 15)          External trigger polarity                       0x00008000  */\
)

#define TIM17_CCR1 (\
  0 * TIM_CCR1_CCR1         /* (0xFFFF << 0)      Capture/Compare 1 Value                         0x0000FFFF  */\
)

#define TIM17_CCR2 (\
  0 * TIM_CCR2_CCR2         /* (0xFFFF << 0)      Capture/Compare 2 Value                         0x0000FFFF  */\
)

#define TIM17_CCR3 (\
  0 * TIM_CCR3_CCR3         /* (0xFFFF << 0)      Capture/Compare 3 Value                         0x0000FFFF  */\
)

#define TIM17_CCR4 (\
  0 * TIM_CCR4_CCR4         /* (0xFFFF << 0)      Capture/Compare 4 Value                         0x0000FFFF  */\
)

#define TIM17_DCR (      \
  0 * TIM_DCR_DBA        |  /* (0x1F << 0)        DBA[4:0] bits (DMA Base Address)                0x0000001F  */\
  0 * TIM_DCR_DBA_0      |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_DCR_DBA_1      |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_DCR_DBA_2      |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_DCR_DBA_3      |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_DCR_DBA_4      |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_DCR_DBL        |  /* (0x1F << 8)        DBL[4:0] bits (DMA Burst Length)                0x00001F00  */\
  0 * TIM_DCR_DBL_0      |  /* (0x01 << 8)          0x00000100                                                */\
  0 * TIM_DCR_DBL_1      |  /* (0x02 << 8)          0x00000200                                                */\
  0 * TIM_DCR_DBL_2      |  /* (0x04 << 8)          0x00000400                                                */\
  0 * TIM_DCR_DBL_3      |  /* (0x08 << 8)          0x00000800                                                */\
  0 * TIM_DCR_DBL_4         /* (0x10 << 8)          0x00001000                                                */\
)

#define TIM17_DMAR (\
  0 * TIM_DMAR_DMAB         /* (0xFFFF << 0)      DMA register for burst accesses                 0x0000FFFF  */\
)

#define TIM17_OR         0000

#define TIM17_BDTR (     \
  0 * TIM_BDTR_DTG       |  /* (0xFF << 0)        DTG[0:7] bits (Dead-Time Generator set-up)      0x000000FF  */\
  0 * TIM_BDTR_DTG_0     |  /* (0x01 << 0)          0x00000001                                                */\
  0 * TIM_BDTR_DTG_1     |  /* (0x02 << 0)          0x00000002                                                */\
  0 * TIM_BDTR_DTG_2     |  /* (0x04 << 0)          0x00000004                                                */\
  0 * TIM_BDTR_DTG_3     |  /* (0x08 << 0)          0x00000008                                                */\
  0 * TIM_BDTR_DTG_4     |  /* (0x10 << 0)          0x00000010                                                */\
  0 * TIM_BDTR_DTG_5     |  /* (0x20 << 0)          0x00000020                                                */\
  0 * TIM_BDTR_DTG_6     |  /* (0x40 << 0)          0x00000040                                                */\
  0 * TIM_BDTR_DTG_7     |  /* (0x80 << 0)          0x00000080                                                */\
  0 * TIM_BDTR_LOCK      |  /* (3 << 8)           LOCK[1:0] bits (Lock Configuration)             0x00000300  */\
  0 * TIM_BDTR_LOCK_0    |  /* (1 << 8)             0x00000100                                                */\
  0 * TIM_BDTR_LOCK_1    |  /* (2 << 8)             0x00000200                                                */\
  0 * TIM_BDTR_OSSI      |  /* (1 << 10)          Off-State Selection for Idle mode               0x00000400  */\
  0 * TIM_BDTR_OSSR      |  /* (1 << 11)          Off-State Selection for Run mode                0x00000800  */\
  0 * TIM_BDTR_BKE       |  /* (1 << 12)          Break enable                                    0x00001000  */\
  0 * TIM_BDTR_BKP       |  /* (1 << 13)          Break Polarity                                  0x00002000  */\
  0 * TIM_BDTR_AOE       |  /* (1 << 14)          Automatic Output enable                         0x00004000  */\
  0 * TIM_BDTR_MOE          /* (1 << 15)          Main Output enable                              0x00008000  */\
)

#define TIM17_SR (       \
  0 * TIM_SR_UIF         |  /* (1 << 0)           Update interrupt Flag                           0x00000001  */\
  0 * TIM_SR_CC1IF       |  /* (1 << 1)           Capture/Compare 1 interrupt Flag                0x00000002  */\
  0 * TIM_SR_CC2IF       |  /* (1 << 2)           Capture/Compare 2 interrupt Flag                0x00000004  */\
  0 * TIM_SR_CC3IF       |  /* (1 << 3)           Capture/Compare 3 interrupt Flag                0x00000008  */\
  0 * TIM_SR_CC4IF       |  /* (1 << 4)           Capture/Compare 4 interrupt Flag                0x00000010  */\
  0 * TIM_SR_COMIF       |  /* (1 << 5)           COM interrupt Flag                              0x00000020  */\
  0 * TIM_SR_TIF         |  /* (1 << 6)           Trigger interrupt Flag                          0x00000040  */\
  0 * TIM_SR_BIF         |  /* (1 << 7)           Break interrupt Flag                            0x00000080  */\
  0 * TIM_SR_CC1OF       |  /* (1 << 9)           Capture/Compare 1 Overcapture Flag              0x00000200  */\
  0 * TIM_SR_CC2OF       |  /* (1 << 10)          Capture/Compare 2 Overcapture Flag              0x00000400  */\
  0 * TIM_SR_CC3OF       |  /* (1 << 11)          Capture/Compare 3 Overcapture Flag              0x00000800  */\
  0 * TIM_SR_CC4OF          /* (1 << 12)          Capture/Compare 4 Overcapture Flag              0x00001000  */\
)

#define TIM17_CNT (\
  0 * TIM_CNT_CNT           /* (0xFFFFFFFF << 0)  Counter Value                                   0xFFFFFFFF  */\
)

  #if defined TIM1_PSC
    #if TIM1_PSC != 0
      TIM1->PSC = TIM1_PSC;    /* 0x40012C28: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM1_PSC 0
  #endif

  #if defined TIM1_ARR
    #if TIM1_ARR != 0
      TIM1->ARR = TIM1_ARR;    /* 0x40012C2C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM1_ARR 0
  #endif

  #if defined TIM1_EGR
    #if TIM1_EGR != 0
      TIM1->EGR = TIM1_EGR; /* 0x40012C14: TIM event generation register, Address offset: 0x14       */
    #endif
  #else
    #define TIM1_EGR 0
  #endif

  #if defined TIM1_CCMR1
    #if TIM1_CCMR1 != 0
      TIM1->CCMR1 = TIM1_CCMR1; /* 0x40012C18: TIM capture/compare mode register 1, Address offset: 0x18  */
    #endif
  #else
    #define TIM1_CCMR1 0
  #endif

  #if defined TIM1_CCMR2
    #if TIM1_CCMR2 != 0
      TIM1->CCMR2 = TIM1_CCMR2; /* 0x40012C1C: TIM capture/compare mode register 2, Address offset: 0x1C  */
    #endif
  #else
    #define TIM1_CCMR2 0
  #endif

  #if defined TIM1_CNT
    #if TIM1_CNT != 0
      TIM1->CNT = TIM1_CNT;    /* 0x40012C24: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM1_CNT 0
  #endif

  #if defined TIM1_CCR1
    #if TIM1_CCR1 != 0
      TIM1->CCR1 = TIM1_CCR1;  /* 0x40012C34: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM1_CCR1 0
  #endif

  #if defined TIM1_CCR2
    #if TIM1_CCR2 != 0
      TIM1->CCR2 = TIM1_CCR2;  /* 0x40012C38: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM1_CCR2 0
  #endif

  #if defined TIM1_CCR3
    #if TIM1_CCR3 != 0
      TIM1->CCR3 = TIM1_CCR3;  /* 0x40012C3C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM1_CCR3 0
  #endif

  #if defined TIM1_CCR4
    #if TIM1_CCR4 != 0
      TIM1->CCR4 = TIM1_CCR4;  /* 0x40012C40: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM1_CCR4 0
  #endif

  #if defined TIM1_CCER
    #if TIM1_CCER != 0
      TIM1->CCER = TIM1_CCER;  /* 0x40012C20: TIM capture/compare enable register, Address offset: 0x20    */
    #endif
  #else
    #define TIM1_CCER 0
  #endif

  #if defined TIM1_DIER
    #if TIM1_DIER != 0
      TIM1->DIER = TIM1_DIER; /* 0x40012C0C: TIM DMA/interrupt enable register, Address offset: 0x0C   */
    #endif
  #else
    #define TIM1_DIER 0
  #endif

  #if defined TIM1_RCR
    #if TIM1_RCR != 0
      TIM1->RCR = TIM1_RCR;    /* 0x40012C30: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM1_RCR 0
  #endif

  #if defined TIM1_SMCR
    #if TIM1_SMCR != 0
      TIM1->SMCR = TIM1_SMCR; /* 0x40012C08: TIM slave Mode Control register, Address offset: 0x08     */
    #endif
  #else
    #define TIM1_SMCR 0
  #endif

  #if defined TIM1_SR
    #if TIM1_SR != 0
      TIM1->SR = TIM1_SR;   /* 0x40012C10: TIM status register, Address offset: 0x10                 */
    #endif
  #else
    #define TIM1_SR 0
  #endif

  #if defined TIM1_DCR
    #if TIM1_DCR != 0
      TIM1->DCR = TIM1_DCR;    /* 0x40012C48: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM1_DCR 0
  #endif

  #if defined TIM1_DMAR
    #if TIM1_DMAR != 0
      TIM1->DMAR = TIM1_DMAR;  /* 0x40012C4C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM1_DMAR 0
  #endif

  #if defined TIM1_BDTR
    #if TIM1_BDTR != 0
      TIM1->BDTR = TIM1_BDTR;  /* 0x40012C44: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM1_BDTR 0
  #endif

  #if defined TIM1_OR
    #if TIM1_OR != 0
      TIM1->OR = TIM1_OR;      /* 0x40012C50: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM1_OR 0
  #endif

  #if defined TIM1_CR2
    #if TIM1_CR2 != 0
      TIM1->CR2 = TIM1_CR2; /* 0x40012C04: TIM control register 2, Address offset: 0x04             */
    #endif
  #else
    #define TIM1_CR2 0
  #endif

  #if defined TIM1_CR1
    #if TIM1_CR1 != 0
      TIM1->CR1 = TIM1_CR1; /* 0x40012C00: TIM control register 1, Address offset: 0x00            */
    #endif
  #else
    #define TIM1_CR1 0
  #endif

  #if defined TIM3_PSC
    #if TIM3_PSC != 0
      TIM3->PSC = TIM3_PSC;    /* 0x40000428: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM3_PSC 0
  #endif

  #if defined TIM3_ARR
    #if TIM3_ARR != 0
      TIM3->ARR = TIM3_ARR;    /* 0x4000042C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM3_ARR 0
  #endif

  #if defined TIM3_EGR
    #if TIM3_EGR != 0
      TIM3->EGR = TIM3_EGR;    /* 0x40000414: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM3_EGR 0
  #endif

  #if defined TIM3_CCMR1
    #if TIM3_CCMR1 != 0
      TIM3->CCMR1 = TIM3_CCMR1; /* 0x40000418: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM3_CCMR1 0
  #endif

  #if defined TIM3_CCMR2
    #if TIM3_CCMR2 != 0
      TIM3->CCMR2 = TIM3_CCMR2; /* 0x4000041C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM3_CCMR2 0
  #endif

  #if defined TIM3_CNT
    #if TIM3_CNT != 0
      TIM3->CNT = TIM3_CNT;    /* 0x40000424: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM3_CNT 0
  #endif

  #if defined TIM3_CCR1
    #if TIM3_CCR1 != 0
      TIM3->CCR1 = TIM3_CCR1;  /* 0x40000434: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM3_CCR1 0
  #endif

  #if defined TIM3_CCR2
    #if TIM3_CCR2 != 0
      TIM3->CCR2 = TIM3_CCR2;  /* 0x40000438: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM3_CCR2 0
  #endif

  #if defined TIM3_CCR3
    #if TIM3_CCR3 != 0
      TIM3->CCR3 = TIM3_CCR3;  /* 0x4000043C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM3_CCR3 0
  #endif

  #if defined TIM3_CCR4
    #if TIM3_CCR4 != 0
      TIM3->CCR4 = TIM3_CCR4;  /* 0x40000440: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM3_CCR4 0
  #endif

  #if defined TIM3_CCER
    #if TIM3_CCER != 0
      TIM3->CCER = TIM3_CCER;  /* 0x40000420: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM3_CCER 0
  #endif

  #if defined TIM3_DIER
    #if TIM3_DIER != 0
      TIM3->DIER = TIM3_DIER;  /* 0x4000040C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM3_DIER 0
  #endif

  #if defined TIM3_RCR
    #if TIM3_RCR != 0
      TIM3->RCR = TIM3_RCR;    /* 0x40000430: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM3_RCR 0
  #endif

  #if defined TIM3_SMCR
    #if TIM3_SMCR != 0
      TIM3->SMCR = TIM3_SMCR;  /* 0x40000408: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM3_SMCR 0
  #endif

  #if defined TIM3_SR
    #if TIM3_SR != 0
      TIM3->SR = TIM3_SR;      /* 0x40000410: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM3_SR 0
  #endif

  #if defined TIM3_DCR
    #if TIM3_DCR != 0
      TIM3->DCR = TIM3_DCR;    /* 0x40000448: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM3_DCR 0
  #endif

  #if defined TIM3_DMAR
    #if TIM3_DMAR != 0
      TIM3->DMAR = TIM3_DMAR;  /* 0x4000044C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM3_DMAR 0
  #endif

  #if defined TIM3_BDTR
    #if TIM3_BDTR != 0
      TIM3->BDTR = TIM3_BDTR;  /* 0x40000444: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM3_BDTR 0
  #endif

  #if defined TIM3_OR
    #if TIM3_OR != 0
      TIM3->OR = TIM3_OR;      /* 0x40000450: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM3_OR 0
  #endif

  #if defined TIM3_CR2
    #if TIM3_CR2 != 0
      TIM3->CR2 = TIM3_CR2;    /* 0x40000404: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM3_CR2 0
  #endif

  #if defined TIM3_CR1
    #if TIM3_CR1 != 0
      TIM3->CR1 = TIM3_CR1;    /* 0x40000400: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM3_CR1 0
  #endif

  #if defined TIM6_PSC
    #if TIM6_PSC != 0
      TIM6->PSC = TIM6_PSC;    /* 0x40001028: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM6_PSC 0
  #endif

  #if defined TIM6_ARR
    #if TIM6_ARR != 0
      TIM6->ARR = TIM6_ARR;    /* 0x4000102C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM6_ARR 0
  #endif

  #if defined TIM6_EGR
    #if TIM6_EGR != 0
      TIM6->EGR = TIM6_EGR;    /* 0x40001014: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM6_EGR 0
  #endif

  #if defined TIM6_CCMR1
    #if TIM6_CCMR1 != 0
      TIM6->CCMR1 = TIM6_CCMR1; /* 0x40001018: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM6_CCMR1 0
  #endif

  #if defined TIM6_CCMR2
    #if TIM6_CCMR2 != 0
      TIM6->CCMR2 = TIM6_CCMR2; /* 0x4000101C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM6_CCMR2 0
  #endif

  #if defined TIM6_CNT
    #if TIM6_CNT != 0
      TIM6->CNT = TIM6_CNT;    /* 0x40001024: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM6_CNT 0
  #endif

  #if defined TIM6_CCR1
    #if TIM6_CCR1 != 0
      TIM6->CCR1 = TIM6_CCR1;  /* 0x40001034: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM6_CCR1 0
  #endif

  #if defined TIM6_CCR2
    #if TIM6_CCR2 != 0
      TIM6->CCR2 = TIM6_CCR2;  /* 0x40001038: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM6_CCR2 0
  #endif

  #if defined TIM6_CCR3
    #if TIM6_CCR3 != 0
      TIM6->CCR3 = TIM6_CCR3;  /* 0x4000103C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM6_CCR3 0
  #endif

  #if defined TIM6_CCR4
    #if TIM6_CCR4 != 0
      TIM6->CCR4 = TIM6_CCR4;  /* 0x40001040: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM6_CCR4 0
  #endif

  #if defined TIM6_CCER
    #if TIM6_CCER != 0
      TIM6->CCER = TIM6_CCER;  /* 0x40001020: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM6_CCER 0
  #endif

  #if defined TIM6_DIER
    #if TIM6_DIER != 0
      TIM6->DIER = TIM6_DIER;  /* 0x4000100C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM6_DIER 0
  #endif

  #if defined TIM6_RCR
    #if TIM6_RCR != 0
      TIM6->RCR = TIM6_RCR;    /* 0x40001030: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM6_RCR 0
  #endif

  #if defined TIM6_SMCR
    #if TIM6_SMCR != 0
      TIM6->SMCR = TIM6_SMCR;  /* 0x40001008: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM6_SMCR 0
  #endif

  #if defined TIM6_SR
    #if TIM6_SR != 0
      TIM6->SR = TIM6_SR;      /* 0x40001010: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM6_SR 0
  #endif

  #if defined TIM6_DCR
    #if TIM6_DCR != 0
      TIM6->DCR = TIM6_DCR;    /* 0x40001048: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM6_DCR 0
  #endif

  #if defined TIM6_DMAR
    #if TIM6_DMAR != 0
      TIM6->DMAR = TIM6_DMAR;  /* 0x4000104C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM6_DMAR 0
  #endif

  #if defined TIM6_BDTR
    #if TIM6_BDTR != 0
      TIM6->BDTR = TIM6_BDTR;  /* 0x40001044: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM6_BDTR 0
  #endif

  #if defined TIM6_OR
    #if TIM6_OR != 0
      TIM6->OR = TIM6_OR;      /* 0x40001050: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM6_OR 0
  #endif

  #if defined TIM6_CR2
    #if TIM6_CR2 != 0
      TIM6->CR2 = TIM6_CR2;    /* 0x40001004: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM6_CR2 0
  #endif

  #if defined TIM6_CR1
    #if TIM6_CR1 != 0
      TIM6->CR1 = TIM6_CR1;    /* 0x40001000: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM6_CR1 0
  #endif

  #if defined TIM14_PSC
    #if TIM14_PSC != 0
      TIM14->PSC = TIM14_PSC;  /* 0x40002028: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM14_PSC 0
  #endif

  #if defined TIM14_ARR
    #if TIM14_ARR != 0
      TIM14->ARR = TIM14_ARR;  /* 0x4000202C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM14_ARR 0
  #endif

  #if defined TIM14_EGR
    #if TIM14_EGR != 0
      TIM14->EGR = TIM14_EGR;  /* 0x40002014: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM14_EGR 0
  #endif

  #if defined TIM14_CCMR1
    #if TIM14_CCMR1 != 0
      TIM14->CCMR1 = TIM14_CCMR1; /* 0x40002018: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM14_CCMR1 0
  #endif

  #if defined TIM14_CCMR2
    #if TIM14_CCMR2 != 0
      TIM14->CCMR2 = TIM14_CCMR2; /* 0x4000201C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM14_CCMR2 0
  #endif

  #if defined TIM14_CNT
    #if TIM14_CNT != 0
      TIM14->CNT = TIM14_CNT;  /* 0x40002024: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM14_CNT 0
  #endif

  #if defined TIM14_CCR1
    #if TIM14_CCR1 != 0
      TIM14->CCR1 = TIM14_CCR1; /* 0x40002034: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM14_CCR1 0
  #endif

  #if defined TIM14_CCR2
    #if TIM14_CCR2 != 0
      TIM14->CCR2 = TIM14_CCR2; /* 0x40002038: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM14_CCR2 0
  #endif

  #if defined TIM14_CCR3
    #if TIM14_CCR3 != 0
      TIM14->CCR3 = TIM14_CCR3; /* 0x4000203C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM14_CCR3 0
  #endif

  #if defined TIM14_CCR4
    #if TIM14_CCR4 != 0
      TIM14->CCR4 = TIM14_CCR4; /* 0x40002040: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM14_CCR4 0
  #endif

  #if defined TIM14_CCER
    #if TIM14_CCER != 0
      TIM14->CCER = TIM14_CCER; /* 0x40002020: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM14_CCER 0
  #endif

  #if defined TIM14_DIER
    #if TIM14_DIER != 0
      TIM14->DIER = TIM14_DIER; /* 0x4000200C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM14_DIER 0
  #endif

  #if defined TIM14_RCR
    #if TIM14_RCR != 0
      TIM14->RCR = TIM14_RCR;  /* 0x40002030: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM14_RCR 0
  #endif

  #if defined TIM14_SMCR
    #if TIM14_SMCR != 0
      TIM14->SMCR = TIM14_SMCR; /* 0x40002008: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM14_SMCR 0
  #endif

  #if defined TIM14_SR
    #if TIM14_SR != 0
      TIM14->SR = TIM14_SR;    /* 0x40002010: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM14_SR 0
  #endif

  #if defined TIM14_DCR
    #if TIM14_DCR != 0
      TIM14->DCR = TIM14_DCR;  /* 0x40002048: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM14_DCR 0
  #endif

  #if defined TIM14_DMAR
    #if TIM14_DMAR != 0
      TIM14->DMAR = TIM14_DMAR; /* 0x4000204C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM14_DMAR 0
  #endif

  #if defined TIM14_BDTR
    #if TIM14_BDTR != 0
      TIM14->BDTR = TIM14_BDTR; /* 0x40002044: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM14_BDTR 0
  #endif

  #if defined TIM14_OR
    #if TIM14_OR != 0
      TIM14->OR = TIM14_OR;    /* 0x40002050: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM14_OR 0
  #endif

  #if defined TIM14_CR2
    #if TIM14_CR2 != 0
      TIM14->CR2 = TIM14_CR2;  /* 0x40002004: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM14_CR2 0
  #endif

  #if defined TIM14_CR1
    #if TIM14_CR1 != 0
      TIM14->CR1 = TIM14_CR1;  /* 0x40002000: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM14_CR1 0
  #endif

  #if defined TIM15_PSC
    #if TIM15_PSC != 0
      TIM15->PSC = TIM15_PSC;  /* 0x40014028: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM15_PSC 0
  #endif

  #if defined TIM15_ARR
    #if TIM15_ARR != 0
      TIM15->ARR = TIM15_ARR;  /* 0x4001402C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM15_ARR 0
  #endif

  #if defined TIM15_EGR
    #if TIM15_EGR != 0
      TIM15->EGR = TIM15_EGR;  /* 0x40014014: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM15_EGR 0
  #endif

  #if defined TIM15_CCMR1
    #if TIM15_CCMR1 != 0
      TIM15->CCMR1 = TIM15_CCMR1; /* 0x40014018: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM15_CCMR1 0
  #endif

  #if defined TIM15_CCMR2
    #if TIM15_CCMR2 != 0
      TIM15->CCMR2 = TIM15_CCMR2; /* 0x4001401C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM15_CCMR2 0
  #endif

  #if defined TIM15_CNT
    #if TIM15_CNT != 0
      TIM15->CNT = TIM15_CNT;  /* 0x40014024: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM15_CNT 0
  #endif

  #if defined TIM15_CCR1
    #if TIM15_CCR1 != 0
      TIM15->CCR1 = TIM15_CCR1; /* 0x40014034: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM15_CCR1 0
  #endif

  #if defined TIM15_CCR2
    #if TIM15_CCR2 != 0
      TIM15->CCR2 = TIM15_CCR2; /* 0x40014038: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM15_CCR2 0
  #endif

  #if defined TIM15_CCR3
    #if TIM15_CCR3 != 0
      TIM15->CCR3 = TIM15_CCR3; /* 0x4001403C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM15_CCR3 0
  #endif

  #if defined TIM15_CCR4
    #if TIM15_CCR4 != 0
      TIM15->CCR4 = TIM15_CCR4; /* 0x40014040: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM15_CCR4 0
  #endif

  #if defined TIM15_CCER
    #if TIM15_CCER != 0
      TIM15->CCER = TIM15_CCER; /* 0x40014020: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM15_CCER 0
  #endif

  #if defined TIM15_DIER
    #if TIM15_DIER != 0
      TIM15->DIER = TIM15_DIER; /* 0x4001400C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM15_DIER 0
  #endif

  #if defined TIM15_RCR
    #if TIM15_RCR != 0
      TIM15->RCR = TIM15_RCR;  /* 0x40014030: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM15_RCR 0
  #endif

  #if defined TIM15_SMCR
    #if TIM15_SMCR != 0
      TIM15->SMCR = TIM15_SMCR; /* 0x40014008: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM15_SMCR 0
  #endif

  #if defined TIM15_SR
    #if TIM15_SR != 0
      TIM15->SR = TIM15_SR;    /* 0x40014010: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM15_SR 0
  #endif

  #if defined TIM15_DCR
    #if TIM15_DCR != 0
      TIM15->DCR = TIM15_DCR;  /* 0x40014048: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM15_DCR 0
  #endif

  #if defined TIM15_DMAR
    #if TIM15_DMAR != 0
      TIM15->DMAR = TIM15_DMAR; /* 0x4001404C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM15_DMAR 0
  #endif

  #if defined TIM15_BDTR
    #if TIM15_BDTR != 0
      TIM15->BDTR = TIM15_BDTR; /* 0x40014044: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM15_BDTR 0
  #endif

  #if defined TIM15_OR
    #if TIM15_OR != 0
      TIM15->OR = TIM15_OR;    /* 0x40014050: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM15_OR 0
  #endif

  #if defined TIM15_CR2
    #if TIM15_CR2 != 0
      TIM15->CR2 = TIM15_CR2;  /* 0x40014004: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM15_CR2 0
  #endif

  #if defined TIM15_CR1
    #if TIM15_CR1 != 0
      TIM15->CR1 = TIM15_CR1;  /* 0x40014000: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM15_CR1 0
  #endif

  #if defined TIM16_PSC
    #if TIM16_PSC != 0
      TIM16->PSC = TIM16_PSC;  /* 0x40014428: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM16_PSC 0
  #endif

  #if defined TIM16_ARR
    #if TIM16_ARR != 0
      TIM16->ARR = TIM16_ARR;  /* 0x4001442C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM16_ARR 0
  #endif

  #if defined TIM16_EGR
    #if TIM16_EGR != 0
      TIM16->EGR = TIM16_EGR;  /* 0x40014414: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM16_EGR 0
  #endif

  #if defined TIM16_CCMR1
    #if TIM16_CCMR1 != 0
      TIM16->CCMR1 = TIM16_CCMR1; /* 0x40014418: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM16_CCMR1 0
  #endif

  #if defined TIM16_CCMR2
    #if TIM16_CCMR2 != 0
      TIM16->CCMR2 = TIM16_CCMR2; /* 0x4001441C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM16_CCMR2 0
  #endif

  #if defined TIM16_CNT
    #if TIM16_CNT != 0
      TIM16->CNT = TIM16_CNT;  /* 0x40014424: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM16_CNT 0
  #endif

  #if defined TIM16_CCR1
    #if TIM16_CCR1 != 0
      TIM16->CCR1 = TIM16_CCR1; /* 0x40014434: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM16_CCR1 0
  #endif

  #if defined TIM16_CCR2
    #if TIM16_CCR2 != 0
      TIM16->CCR2 = TIM16_CCR2; /* 0x40014438: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM16_CCR2 0
  #endif

  #if defined TIM16_CCR3
    #if TIM16_CCR3 != 0
      TIM16->CCR3 = TIM16_CCR3; /* 0x4001443C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM16_CCR3 0
  #endif

  #if defined TIM16_CCR4
    #if TIM16_CCR4 != 0
      TIM16->CCR4 = TIM16_CCR4; /* 0x40014440: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM16_CCR4 0
  #endif

  #if defined TIM16_CCER
    #if TIM16_CCER != 0
      TIM16->CCER = TIM16_CCER; /* 0x40014420: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM16_CCER 0
  #endif

  #if defined TIM16_DIER
    #if TIM16_DIER != 0
      TIM16->DIER = TIM16_DIER; /* 0x4001440C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM16_DIER 0
  #endif

  #if defined TIM16_RCR
    #if TIM16_RCR != 0
      TIM16->RCR = TIM16_RCR;  /* 0x40014430: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM16_RCR 0
  #endif

  #if defined TIM16_SMCR
    #if TIM16_SMCR != 0
      TIM16->SMCR = TIM16_SMCR; /* 0x40014408: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM16_SMCR 0
  #endif

  #if defined TIM16_SR
    #if TIM16_SR != 0
      TIM16->SR = TIM16_SR;    /* 0x40014410: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM16_SR 0
  #endif

  #if defined TIM16_DCR
    #if TIM16_DCR != 0
      TIM16->DCR = TIM16_DCR;  /* 0x40014448: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM16_DCR 0
  #endif

  #if defined TIM16_DMAR
    #if TIM16_DMAR != 0
      TIM16->DMAR = TIM16_DMAR; /* 0x4001444C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM16_DMAR 0
  #endif

  #if defined TIM16_BDTR
    #if TIM16_BDTR != 0
      TIM16->BDTR = TIM16_BDTR; /* 0x40014444: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM16_BDTR 0
  #endif

  #if defined TIM16_OR
    #if TIM16_OR != 0
      TIM16->OR = TIM16_OR;    /* 0x40014450: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM16_OR 0
  #endif

  #if defined TIM16_CR2
    #if TIM16_CR2 != 0
      TIM16->CR2 = TIM16_CR2;  /* 0x40014404: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM16_CR2 0
  #endif

  #if defined TIM16_CR1
    #if TIM16_CR1 != 0
      TIM16->CR1 = TIM16_CR1;  /* 0x40014400: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM16_CR1 0
  #endif

  #if defined TIM17_PSC
    #if TIM17_PSC != 0
      TIM17->PSC = TIM17_PSC;  /* 0x40014828: TIM prescaler register, Address offset: 0x28                       */
    #endif
  #else
    #define TIM17_PSC 0
  #endif

  #if defined TIM17_ARR
    #if TIM17_ARR != 0
      TIM17->ARR = TIM17_ARR;  /* 0x4001482C: TIM auto-reload register, Address offset: 0x2C                     */
    #endif
  #else
    #define TIM17_ARR 0
  #endif

  #if defined TIM17_EGR
    #if TIM17_EGR != 0
      TIM17->EGR = TIM17_EGR;  /* 0x40014814: TIM event generation register, Address offset: 0x14                */
    #endif
  #else
    #define TIM17_EGR 0
  #endif

  #if defined TIM17_CCMR1
    #if TIM17_CCMR1 != 0
      TIM17->CCMR1 = TIM17_CCMR1; /* 0x40014818: TIM capture/compare mode register 1, Address offset: 0x18          */
    #endif
  #else
    #define TIM17_CCMR1 0
  #endif

  #if defined TIM17_CCMR2
    #if TIM17_CCMR2 != 0
      TIM17->CCMR2 = TIM17_CCMR2; /* 0x4001481C: TIM capture/compare mode register 2, Address offset: 0x1C          */
    #endif
  #else
    #define TIM17_CCMR2 0
  #endif

  #if defined TIM17_CNT
    #if TIM17_CNT != 0
      TIM17->CNT = TIM17_CNT;  /* 0x40014824: TIM counter register, Address offset: 0x24                         */
    #endif
  #else
    #define TIM17_CNT 0
  #endif

  #if defined TIM17_CCR1
    #if TIM17_CCR1 != 0
      TIM17->CCR1 = TIM17_CCR1; /* 0x40014834: TIM capture/compare register 1, Address offset: 0x34               */
    #endif
  #else
    #define TIM17_CCR1 0
  #endif

  #if defined TIM17_CCR2
    #if TIM17_CCR2 != 0
      TIM17->CCR2 = TIM17_CCR2; /* 0x40014838: TIM capture/compare register 2, Address offset: 0x38               */
    #endif
  #else
    #define TIM17_CCR2 0
  #endif

  #if defined TIM17_CCR3
    #if TIM17_CCR3 != 0
      TIM17->CCR3 = TIM17_CCR3; /* 0x4001483C: TIM capture/compare register 3, Address offset: 0x3C               */
    #endif
  #else
    #define TIM17_CCR3 0
  #endif

  #if defined TIM17_CCR4
    #if TIM17_CCR4 != 0
      TIM17->CCR4 = TIM17_CCR4; /* 0x40014840: TIM capture/compare register 4, Address offset: 0x40               */
    #endif
  #else
    #define TIM17_CCR4 0
  #endif

  #if defined TIM17_CCER
    #if TIM17_CCER != 0
      TIM17->CCER = TIM17_CCER; /* 0x40014820: TIM capture/compare enable register, Address offset: 0x20          */
    #endif
  #else
    #define TIM17_CCER 0
  #endif

  #if defined TIM17_DIER
    #if TIM17_DIER != 0
      TIM17->DIER = TIM17_DIER; /* 0x4001480C: TIM DMA/interrupt enable register, Address offset: 0x0C            */
    #endif
  #else
    #define TIM17_DIER 0
  #endif

  #if defined TIM17_RCR
    #if TIM17_RCR != 0
      TIM17->RCR = TIM17_RCR;  /* 0x40014830: TIM repetition counter register, Address offset: 0x30              */
    #endif
  #else
    #define TIM17_RCR 0
  #endif

  #if defined TIM17_SMCR
    #if TIM17_SMCR != 0
      TIM17->SMCR = TIM17_SMCR; /* 0x40014808: TIM slave Mode Control register, Address offset: 0x08              */
    #endif
  #else
    #define TIM17_SMCR 0
  #endif

  #if defined TIM17_SR
    #if TIM17_SR != 0
      TIM17->SR = TIM17_SR;    /* 0x40014810: TIM status register, Address offset: 0x10                          */
    #endif
  #else
    #define TIM17_SR 0
  #endif

  #if defined TIM17_DCR
    #if TIM17_DCR != 0
      TIM17->DCR = TIM17_DCR;  /* 0x40014848: TIM DMA control register, Address offset: 0x48                     */
    #endif
  #else
    #define TIM17_DCR 0
  #endif

  #if defined TIM17_DMAR
    #if TIM17_DMAR != 0
      TIM17->DMAR = TIM17_DMAR; /* 0x4001484C: TIM DMA address for full transfer register, Address offset: 0x4C   */
    #endif
  #else
    #define TIM17_DMAR 0
  #endif

  #if defined TIM17_BDTR
    #if TIM17_BDTR != 0
      TIM17->BDTR = TIM17_BDTR; /* 0x40014844: TIM break and dead-time register, Address offset: 0x44             */
    #endif
  #else
    #define TIM17_BDTR 0
  #endif

  #if defined TIM17_OR
    #if TIM17_OR != 0
      TIM17->OR = TIM17_OR;    /* 0x40014850: TIM option register, Address offset: 0x50                          */
    #endif
  #else
    #define TIM17_OR 0
  #endif

  #if defined TIM17_CR2
    #if TIM17_CR2 != 0
      TIM17->CR2 = TIM17_CR2;  /* 0x40014804: TIM control register 2, Address offset: 0x04                       */
    #endif
  #else
    #define TIM17_CR2 0
  #endif

  #if defined TIM17_CR1
    #if TIM17_CR1 != 0
      TIM17->CR1 = TIM17_CR1;  /* 0x40014800: TIM control register 1, Address offset: 0x00                       */
    #endif
  #else
    #define TIM17_CR1 0
  #endif

#define TIM1_EN  YES
#define TIM3_EN  NO
#define TIM6_EN  NO
#define TIM14_EN YES
#define TIM15_EN NO
#define TIM16_EN NO
#define TIM17_EN NO
